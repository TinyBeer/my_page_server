basePath: /
definitions:
  domain.AccessTokenResp:
    properties:
      access_token:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  domain.BaseResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  domain.Plan:
    properties:
      content:
        type: string
      duration:
        type: integer
      id:
        type: string
      times:
        type: integer
      type:
        $ref: '#/definitions/domain.PlanType'
    type: object
  domain.PlanCreateReq:
    properties:
      content:
        type: string
      duration:
        type: integer
      times:
        type: integer
      type:
        $ref: '#/definitions/domain.PlanType'
    type: object
  domain.PlanDeleteReq:
    properties:
      id:
        type: string
    type: object
  domain.PlanListResp:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Plan'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  domain.PlanType:
    enum:
    - daily
    - weekly
    - monthly
    type: string
    x-enum-varnames:
    - PlanType_Daily
    - PlanType_Weekly
    - PlanType_Monthly
  domain.Todo:
    properties:
      completed_at:
        type: string
      completeted_times:
        type: integer
      content:
        type: string
      duration:
        type: integer
      id:
        type: string
      times:
        type: integer
    type: object
  domain.TodoCompleteReq:
    properties:
      id:
        type: string
    type: object
  domain.TodoCreateReq:
    properties:
      content:
        type: string
      duration:
        type: integer
      times:
        type: integer
    type: object
  domain.TodoDeleteReq:
    properties:
      id:
        type: string
    type: object
  domain.TodoListResp:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Todo'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  domain.TokenReq:
    properties:
      password:
        maxLength: 18
        minLength: 3
        type: string
      username:
        maxLength: 10
        minLength: 4
        type: string
    type: object
  domain.TokenResp:
    properties:
      access_token:
        type: string
      message:
        type: string
      refresh_token:
        type: string
      status:
        type: string
    type: object
host: 127.0.0.1:9999
info:
  contact:
    email: support@swagger.io
    name: tiny beer
    url: http://www.swagger.io/support
  description: 用于个人文件管理
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 个人主页
  version: "1.0"
paths:
  /plan:
    delete:
      consumes:
      - application/json
      description: 使用access_token删除指定id的Plan
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: TODO删除参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.PlanDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 根据Id删除Plan
      tags:
      - TODO相关接口
    get:
      consumes:
      - application/json
      description: 使用access_token获取Plan列表资源
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PlanListResp'
      summary: 获取Plan列表资源
      tags:
      - Plan相关接口
    post:
      consumes:
      - application/json
      description: 使用access_token创建Plan
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: TODO创建参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.PlanCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 根据内容创建新的Plan
      tags:
      - Plan相关接口
  /todo:
    delete:
      consumes:
      - application/json
      description: 使用access_token删除指定id的TODO
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: TODO删除参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.TodoDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 根据Id删除TOOD
      tags:
      - TODO相关接口
    get:
      consumes:
      - application/json
      description: 使用access_token获取TODO列表资源
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TodoListResp'
      summary: 获取TODO列表资源
      tags:
      - TODO相关接口
    post:
      consumes:
      - application/json
      description: 使用access_token创建TODO
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: TODO创建参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.TodoCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 根据内容创建新的TODO
      tags:
      - TODO相关接口
    put:
      consumes:
      - application/json
      description: 使用access_token根据ID更新TODO完成时间
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: TODO完成参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.TodoCompleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 根据ID更新TODO完成时间
      tags:
      - TODO相关接口
  /token:
    post:
      consumes:
      - application/json
      description: 完成用户登陆操作分发access_token和refresh_token
      parameters:
      - description: 登录参数
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/domain.TokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.TokenResp'
      summary: 用于用户登录
      tags:
      - TOKEN相关接口
  /token/access_token:
    post:
      consumes:
      - application/json
      description: 使用refresh_token更新访问令牌
      parameters:
      - description: refresh_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AccessTokenResp'
      summary: 更新访问令牌
      tags:
      - 用户相关接口
  /token/check:
    get:
      consumes:
      - application/json
      description: 使用access_token验证用户身份
      parameters:
      - description: 访问令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.BaseResp'
      summary: 验证用户身份
      tags:
      - 用户相关接口
swagger: "2.0"
